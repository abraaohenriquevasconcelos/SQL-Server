/*

sys.stats_columns -> contém uma linha para cada coluna que faz parte do sys.stats
sys.stats_columns.object_id -> ID do objeto do qual a coluna faz parte

sys.columns.object_id -> ID do objeto ao qual esta coluna pertence.

sys.tats.object_id -> ID do objeto ao qual essas estatísticas pertencem

sys.stats_columns.stats_id -> ID da estatística da qual essa coluna faz parte.

*/
-- Retorna todas as estat?sticas de uma tabela com suas colunas
SELECT OBJECT_NAME(sc2.object_id) AS TableName , s.name AS StatisticsName , s.stats_id , s.auto_created , 
	ColList = SUBSTRING((SELECT ( ', ' + c1.name )
						FROM sys.stats_columns sc1 JOIN sys.columns c1 
						ON sc1.object_id = c1.object_id
						AND sc1.column_id = c1.column_id 
						WHERE sc1.object_id = sc2.object_id 
						AND sc1.stats_id = s.stats_id 
						ORDER BY sc1.stats_id, sc1.stats_column_id, c1.name                          
						FOR XML PATH( '' ) ), 3, 4000 ) 
FROM sys.stats_columns sc2 
	JOIN sys.columns c2 ON sc2.object_id = c2.object_id AND sc2.column_id = c2.column_id  
	JOIN sys.stats s ON sc2.object_id = s.object_id AND sc2.stats_id = s.stats_id 
--WHERE sc2.object_id = object_id('Tablename') -- Colocar o nome da tabela aqui
GROUP BY  sc2.object_id, s.name , s.stats_id , s.auto_created 
ORDER BY SUBSTRING((SELECT ( ', ' + c1.name )
						FROM sys.stats_columns sc1 JOIN sys.columns c1 
						ON sc1.object_id = c1.object_id
						AND sc1.column_id = c1.column_id 
						WHERE sc1.object_id = sc2.object_id 
						AND sc1.stats_id = s.stats_id 
						ORDER BY sc1.stats_id, sc1.stats_column_id, c1.name                          
						FOR XML PATH( '' ) ), 3, 4000 ) 

/*********************************************************************************************/
/*********************************************************************************************/

;WITH Tamanho_Tabelas AS (
SELECT obj.name, prt.rows
FROM sys.objects obj
JOIN sys.indexes idx on obj.object_id= idx.object_id
JOIN sys.partitions prt on obj.object_id= prt.object_id
JOIN sys.allocation_units alloc on alloc.container_id= prt.partition_id
WHERE obj.type= 'U' AND idx.index_id IN (0, 1)and prt.rows> 1000
GROUP BY obj.name, prt.rows)

SELECT 'UPDATE STATISTICS ' + B.name+ ' ' + A.name+ ' WITH FULLSCAN', D.rows
FROM sys.stats A
join sys.sysobjects B on A.object_id = B.id
join sys.sysindexes C on C.id = B.id and A.name= C.Name
JOIN Tamanho_Tabelas D on  B.name= D.Name
WHERE  C.rowmodctr > 100
and C.rowmodctr> D.rows*.005
and substring( B.name,1,3) not in ('sys','dtp')
ORDER BY D.rows

/*********************************************************************************************/
/*********************************************************************************************/


SELECT top 1000  db_name(), [LastUpdate] = STATS_DATE(object_id, stats_id), 
        [Table] = OBJECT_NAME(object_id), 
        [Statistic] = A.name ,C.rowmodctr, 'UPDATE STATISTICS ' + OBJECT_NAME(object_id) + ' ' + A.name+ ' WITH FULLSCAN'
FROM sys.stats A
	join sys.sysobjects B with(nolock) on A.object_id = B.id
	join sys.sysindexes C with(nolock) on C.id = B.id and A.name = C.Name
WHERE 	
 C.rowmodctr > 1000 
	and substring(OBJECT_NAME(object_id),1,3) not in ('sys','dtp')
	AND OBJECT_NAME(object_id) in('tab_conta_receber_sap') -- elimina tabelas teporarias
order by C.rowmodctr desc
